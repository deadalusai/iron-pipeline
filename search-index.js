var searchIndex = {};
searchIndex["iron_pipeline"] = {"doc":"Simple pipelined request handler for the Iron framework. Inspired by similar\nAPIs used in the new ASP.NET Core 1.0 framework, which in turn is inspired by\nMicrosoft&#39;s OWIN implementation, node.js and other web frameworks.","items":[[3,"Pipeline","iron_pipeline","Iron middleware for implementing a simple forward-only pipeline.\nWhen a request is received each middleware is invoked in the order\nin which they were registered.",null,null],[3,"PipelineNext","","Handle used to invoke the next handler in a pipeline",null,null],[4,"Error","","Errors which may be raised by the Pipeline itself",null,null],[13,"NoHandler","","Raised if there are no further middlewares in the pipeline\navailable to handle the request",0,null],[0,"middleware","","Middleware for use in a `Pipeline`.",null,null],[0,"fork","iron_pipeline::middleware","",null,null],[3,"Fork","iron_pipeline::middleware::fork","Middleware which optionally delegates to a sub pipeline\nbased on some predicate applied to each request.",null,null],[3,"OriginalUrl","","",null,null],[11,"when","","Construct a new pipeline fork.\nThe `predicate` is executed on every request and determines whether to delegate to the\nsub pipeline. The `pipeline_builder` is used to construct the sub pipeline, and is\nexecuted immediately.",1,{"inputs":[{"name":"p"},{"name":"b"}],"output":{"name":"fork"}}],[11,"when_path","","Construct a new pipeline fork.\nThe `path` is compared against the url path on every request and determines\nwhether to delegate to the sub pipeline. The `pipeline_builder` is used to\nconstruct the sub pipeline, and is executed immediately.",1,{"inputs":[{"name":"p"},{"name":"b"}],"output":{"name":"fork"}}],[11,"process","","Invokes the sub pipeline when the predicate P returns **true** for the request.",1,null],[0,"handle","iron_pipeline::middleware","",null,null],[3,"Handle","iron_pipeline::middleware::handle","Container for a middleware function which must directly handle the request.",null,null],[12,"0","","",2,null],[3,"HandleNext","","Container for a pipeline middleware function which may optionally invoke the\nnext middleware in the pipeline via `next.process(req)`, or create a response itself.",null,null],[12,"0","","",3,null],[11,"process","","",2,null],[11,"process","","",3,null],[0,"prelude","iron_pipeline","Includes the Pipeline type and all middleware types in the `middleware` module.",null,null],[8,"Middleware","","Trait which defines middleware within a pipeline.\nImplementors of this trait must call `next.handle(...)` in order to pass\ncontrol to the next middleware in the pipeline.",null,null],[10,"process","","",4,null],[11,"process","","",5,null],[11,"new","","Construct a new, empty request pipeline.",6,{"inputs":[],"output":{"name":"pipeline"}}],[11,"add","","Append a middleware to the end of the pipeline",6,null],[11,"handle","","Invokes the request pipeline",6,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"fmt","","",0,null],[11,"description","","",0,null]],"paths":[[4,"Error"],[3,"Fork"],[3,"Handle"],[3,"HandleNext"],[8,"Middleware"],[3,"PipelineNext"],[3,"Pipeline"]]};
initSearch(searchIndex);
